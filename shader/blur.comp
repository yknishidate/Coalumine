#version 460
#extension GL_EXT_ray_tracing : enable
#include "./random.glsl"

layout(local_size_x = 8, local_size_y = 8) in;
layout(binding = 0, rgba32f) uniform image2D bloomImage;

layout(push_constant) uniform BloomInfo {
    int blurSize;
};

float gaussian2D(float x, float y, float sigma) {
    const float a = 1.0 / (2.0 * 3.141592653589793 * sigma * sigma);
    const float b = exp(-(x * x + y * y) / (2.0 * sigma * sigma));
    return a * b;
}

vec3 stochasticGaussianBlur(ivec2 st)
{
    const uvec2 s = pcg2d(st);
    uint seed = s.x + s.y;

    const int numSamples = 25;
    vec3 bluredColor = vec3(0.0);
    float totalWeight = 0.0;
    for (int i = 0; i < numSamples; i++) {
        const vec2 offset = sampleDisk(seed);
        const vec3 currentColor = imageLoad(bloomImage, st + ivec2(offset * blurSize)).rgb;
        const float sigma = blurSize * 0.3333333;
        const float weight = gaussian2D(offset.x, offset.y, sigma);
        totalWeight += weight;
        bluredColor += currentColor * weight;
    }
    return bluredColor / totalWeight;
}

void main()
{
    const ivec2 st = ivec2(gl_GlobalInvocationID.xy);
    const vec3 bloomColor = stochasticGaussianBlur(st);
    imageStore(bloomImage, st, vec4(bloomColor, 1.0));
}

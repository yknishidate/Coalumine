#version 460
#extension GL_EXT_ray_tracing : enable
#include "./color.glsl"

layout(local_size_x = 8, local_size_y = 8) in;
layout(binding = 0, rgba32f) uniform image2D baseImage;
layout(binding = 1, rgba32f) uniform image2D bloomImage;
layout(binding = 2, rgba8) uniform image2D finalImageRGBA;
layout(binding = 3, rgba8) uniform image2D finalImageBGRA;

layout(push_constant) uniform CompositeInfo {
    float bloomIntensity;
    float saturation;
    float exposure;
    float gamma;
    int enableToneMapping;
    int enableGammaCorrection;
};

void main()
{
    ivec2 st = ivec2(gl_GlobalInvocationID.xy);

    vec3 baseColor = imageLoad(baseImage, st).rgb;
    vec3 bloomColor = imageLoad(bloomImage, st).rgb;

    vec3 color = baseColor + bloomColor * bloomIntensity;
    color = saturate(color, saturation);
    if(enableToneMapping == 1) color = toneMappingACESFilmic(color, exposure);
    if(enableGammaCorrection == 1) color = pow(color, vec3(1.0 / gamma));

    imageStore(finalImageRGBA, st, vec4(color, 1.0));
    imageStore(finalImageBGRA, st, vec4(color, 1.0));
}
